{"version":3,"sources":["registerServiceWorker.js","components/Navbar/index.jsx","components/UserInfoCard/index.jsx","pages/Home/index.jsx","pages/Signin/index.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","current","handleClick","e","setState","key","history","push","bind","assertThisInitialized","react_default","a","createElement","layout","Header","menu","onClick","selectedKeys","mode","theme","defaultSelectedKeys","style","lineHeight","Item","icon","type","float","React","Component","withRouter","UserInfoCard","className","alt","src","Home","components_Navbar","src_components_UserInfoCard","Footer","textAlign","href","target","rel","Signin","componentDidMount","ReactDOM","render","BrowserRouter","basename","Switch","Route","path","exact","component","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.29fd1b41.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { Layout, Menu, Icon } from 'antd';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  state = {\n    current: 'mail',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n    return (\n      <Layout.Header>\n        <Menu\n          onClick={this.handleClick}\n          selectedKeys={[this.state.current]}\n          mode=\"horizontal\"\n          theme=\"dark\"\n          defaultSelectedKeys={['home']}\n          style={{ lineHeight: '64px' }}>\n          <Menu.Item key=\"home\">\n            <Icon type=\"home\" />首页\n          </Menu.Item>\n          <Menu.Item key=\"explor\">\n            <Icon type=\"star\" />探索\n          </Menu.Item>\n          <Menu.Item key=\"ranking\">\n            <Icon type=\"line-chart\" />排行榜\n          </Menu.Item>\n          <Menu.Item key=\"signin\" style={{ float: 'right' }}>\n            登录\n          </Menu.Item>\n          <Menu.Item key=\"signup\" style={{ float: 'right' }}>\n            注册\n          </Menu.Item>\n        </Menu>\n      </Layout.Header>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React from 'react';\n\nimport './index.css';\n\nclass UserInfoCard extends React.Component {\n  render() {\n    return (\n      <div className=\"UserInfoCard\">\n        <div className=\"UserInfoCard-bg\" />\n        <img\n          alt=\"face\"\n          src=\"./img/face.png\"\n          className=\"UserInfoCard-face-img\"\n        />\n        <div className=\"UserInfoCard-username\">Tosone</div>\n        <div className=\"UserInfoCard-info\">\n          <div className=\"UserInfoCard-info-left\">\n            <div className=\"UserInfoCard-info-number\">217</div>\n            <div className=\"UserInfoCard-info-intro\">Snippets</div>\n          </div>\n          <div className=\"UserInfoCard-info-mid\">\n            <div className=\"UserInfoCard-info-number\">323</div>\n            <div className=\"UserInfoCard-info-intro\">Following</div>\n          </div>\n          <div className=\"UserInfoCard-info-right\">\n            <div className=\"UserInfoCard-info-number\">479</div>\n            <div className=\"UserInfoCard-info-intro\">Followers</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserInfoCard;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport Banner from '../../components/Navbar';\nimport UserInfoCard from '../../components/UserInfoCard';\n\nimport './index.css';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <Banner />\n        <div className=\"main\">\n          <div className=\"content\">content</div>\n          <div className=\"content-sider\">\n            <UserInfoCard />\n          </div>\n        </div>\n\n        <Layout.Footer style={{ textAlign: 'center' }}>\n          Code Share ©2018 Created by\n          <a\n            href=\"https://github.com/tosone\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Tosone\n          </a>\n        </Layout.Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nimport Banner from '../../components/Navbar';\n\nclass Signin extends React.Component {\n\n  componentDidMount = () => {\n    this.setState({\n      current: \"signin\",\n    })\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Banner />\n        <div>Signin</div>\n      </Layout>\n    );\n  }\n}\n\nexport default Signin;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nimport Home from './pages/Home';\nimport Signin from './pages/Signin';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/CodeShare\">\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/signin\" component={Signin} />\n      {/* <Redirect from=\"/old-match\" to=\"/will-match\" />\n      <Route path=\"/will-match\" component={WillMatch} />\n      <Route component={NoMatch} /> */}\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}